function init(self)
	self.keyValue = nil
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

local function setKeyStatus(self, keyStatus)
	print("SET STATUS " .. keyStatus)
	if keyStatus == 1 then
		sprite.set_constant("#arrow_" .. self.keyValue, "tint", vmath.vector4(0, 1, 0, 1))
	elseif keyStatus == -1 then 
		sprite.set_constant("#arrow_" .. self.keyValue, "tint", vmath.vector4(1, 0, 0, 1))
	else 
		sprite.set_constant("#arrow_" .. self.keyValue, "tint", vmath.vector4(1, 1, 1, 1))
	end
end

local function setKeyValue(self, keyValue)
	self.keyValue = keyValue
	for k, v in pairs({"up","down","left","right"}) do
		if v ~= self.keyValue then 
			msg.post("#arrow_" .. v, "disable")
		end
	end	
end

function on_message(self, message_id, message, sender)
	if message_id == hash("set_key_value") then
		setKeyValue(self, message.currentKey)
	end
	if message_id == hash("set_key_status") then
		setKeyStatus(self, message.keyStatus)
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
