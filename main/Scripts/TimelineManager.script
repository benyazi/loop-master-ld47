function init(self)
	self.timer = 0
	self.step = 0.01
	self.events = {}
	self.events["0.03"] = {
		title = "0.10 Event",
		pos = vmath.vector3(-50, 100, 0),
		pattern = {"up","down","down","left"}
	}
	self.events["0.07"] = {
		title = "0.15 Event",
		pos = vmath.vector3(250, -100, 0),
		pattern = {"up","down","down","left"}
	}
	self.events["0.30"] = {
		title = "0.30 Event",
		pos = vmath.vector3(50, 250, 0),
		pattern = {"up","down","down","left"}
	}
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	self.timer = self.timer + self.step*dt
	if self.timer < 1 then 
		msg.post('/TimelineManager#Timeline', 'update_timeline', {timelineCurrent = self.timer})
		checkEvents(self)
	end
end

function checkEvents(self)
	local timePoint = string.format("%.2f", self.timer)
	print("CHECK EVENT _> " .. timePoint)
	if self.events[timePoint] ~= nil then 
		raiseEvent(self.events[timePoint])
		self.events[timePoint]=nil
	end
end

function raiseEvent(event) 
	msg.post('/TimelineManager#Timeline', 'raise_event', {event = event})
	local createdEventId = factory.create("#EventFactory", event.pos)
	msg.post(createdEventId, 'event_started', {
		eventData = event
	})
end

function on_message(self, message_id, message, sender)
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
